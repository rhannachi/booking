name: GitHub Workflows (Lint, Test, Build) Actions

# run workflow manually or during PR
on: [pull_request, workflow_dispatch]

# Allow one concurrent deployment
# concurrency:
#   group: ${{ github.ref }}
#   cancel-in-progress: true

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    name: Install and share dependencies
    steps:
      - uses: actions/checkout@v3
      - name: Step Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: zip node_modules
        run: tar -czf node_modules.tar.gz ./node_modules

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: my_node_modules_artifact
          path: node_modules.tar.gz

  lint:
    needs: install-dependencies
    runs-on: ubuntu-latest
    name: Lint and check ts
    steps:
      - uses: actions/checkout@v3

      - name: Step Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn

      - name: Load artifact node_modules
        uses: actions/download-artifact@v3
        with:
          name: my_node_modules_artifact

      - name: unzip node_modules
        run: tar -xzf node_modules.tar.gz

      - name: Lint and ts check
        run: |
          yarn ts:check
          yarn lint

  test-api:
    needs: install-dependencies
    runs-on: ubuntu-latest
    name: Test Api
    steps:
      - uses: actions/checkout@v3

      - name: Step Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn

      - name: Load artifact node_modules
        uses: actions/download-artifact@v3
        with:
          name: my_node_modules_artifact

      - name: unzip node_modules
        run: tar -xzf node_modules.tar.gz

      - name: Test Api
        run: yarn test:api

  test:
    needs: install-dependencies
    runs-on: ubuntu-latest
    name: Test
    steps:
      - uses: actions/checkout@v3

      - name: Step Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn

      - name: Load artifact node_modules
        uses: actions/download-artifact@v3
        with:
          name: my_node_modules_artifact

      - name: unzip node_modules
        run: tar -xzf node_modules.tar.gz

      # - name: Test Storybook
      #  run: yarn test:storybook

      - name: Test
        run: yarn test

  build-storybook:
    needs: install-dependencies
    runs-on: ubuntu-latest
    name: Build Storybook
    steps:
      - uses: actions/checkout@v3

      - name: Step Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn

      - name: Load artifact node_modules
        uses: actions/download-artifact@v3
        with:
          name: my_node_modules_artifact

      - name: unzip node_modules
        run: tar -xzf node_modules.tar.gz

      - name: Build Storybook
        run: yarn build:storybook

  build-next:
    needs: install-dependencies
    runs-on: ubuntu-latest
    name: Build Next.js
    steps:
      - uses: actions/checkout@v3

      - name: Step Node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn

      - name: Load artifact node_modules
        uses: actions/download-artifact@v3
        with:
          name: my_node_modules_artifact

      - name: unzip node_modules
        run: tar -xzf node_modules.tar.gz

      - name: Setup Pages
        uses: actions/configure-pages@v2
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

      - name: Build with Next.js
        run: yarn build

      # - name: Static HTML export with Next.js
      #   run: yarn export

      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v1
      #   with:
      #     path: ./out
